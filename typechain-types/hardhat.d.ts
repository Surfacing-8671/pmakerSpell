/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Abacus",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Abacus__factory>;
    getContractFactory(
      name: "ExponentialDecrease",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExponentialDecrease__factory>;
    getContractFactory(
      name: "LinearDecrease",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearDecrease__factory>;
    getContractFactory(
      name: "StairstepExponentialDecrease",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StairstepExponentialDecrease__factory>;
    getContractFactory(
      name: "Cat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Cat__factory>;
    getContractFactory(
      name: "Kicker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Kicker__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VowLike__factory>;
    getContractFactory(
      name: "ChainLog",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainLog__factory>;
    getContractFactory(
      name: "AbacusLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbacusLike__factory>;
    getContractFactory(
      name: "Clipper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Clipper__factory>;
    getContractFactory(
      name: "ClipperCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClipperCallee__factory>;
    getContractFactory(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DogLike__factory>;
    getContractFactory(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PipLike__factory>;
    getContractFactory(
      name: "SpotterLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpotterLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Cure",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Cure__factory>;
    getContractFactory(
      name: "SourceLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SourceLike__factory>;
    getContractFactory(
      name: "CurveLPOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveLPOracle__factory>;
    getContractFactory(
      name: "CurvePoolLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurvePoolLike__factory>;
    getContractFactory(
      name: "OracleLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleLike__factory>;
    getContractFactory(
      name: "TokenLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenLike__factory>;
    getContractFactory(
      name: "Dai",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Dai__factory>;
    getContractFactory(
      name: "ChainlogLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlogLike__factory>;
    getContractFactory(
      name: "DaiPoker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaiPoker__factory>;
    getContractFactory(
      name: "Fileable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fileable__factory>;
    getContractFactory(
      name: "IPulsexV1OracleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPulsexV1OracleFactory__factory>;
    getContractFactory(
      name: "ClipperLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClipperLike__factory>;
    getContractFactory(
      name: "Dog",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Dog__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VowLike__factory>;
    getContractFactory(
      name: "DSAuth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuth__factory>;
    getContractFactory(
      name: "DSAuthEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuthEvents__factory>;
    getContractFactory(
      name: "DSAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuthority__factory>;
    getContractFactory(
      name: "DSNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSNote__factory>;
    getContractFactory(
      name: "DSPause",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSPause__factory>;
    getContractFactory(
      name: "DSPauseProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSPauseProxy__factory>;
    getContractFactory(
      name: "Drippable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Drippable__factory>;
    getContractFactory(
      name: "DssSpell",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DssSpell__factory>;
    getContractFactory(
      name: "DssSpellAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DssSpellAction__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "IlkRegLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IlkRegLike__factory>;
    getContractFactory(
      name: "OracleLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleLike__factory>;
    getContractFactory(
      name: "PauseLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PauseLike__factory>;
    getContractFactory(
      name: "CatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CatLike__factory>;
    getContractFactory(
      name: "ClipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClipLike__factory>;
    getContractFactory(
      name: "CureLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CureLike__factory>;
    getContractFactory(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DogLike__factory>;
    getContractFactory(
      name: "End",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.End__factory>;
    getContractFactory(
      name: "FlipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlipLike__factory>;
    getContractFactory(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PipLike__factory>;
    getContractFactory(
      name: "PotLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PotLike__factory>;
    getContractFactory(
      name: "SpotLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpotLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VowLike__factory>;
    getContractFactory(
      name: "Flapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Flapper__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "CatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CatLike__factory>;
    getContractFactory(
      name: "Flipper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Flipper__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Flopper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Flopper__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VowLike__factory>;
    getContractFactory(
      name: "CatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CatLike__factory>;
    getContractFactory(
      name: "ClipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClipLike__factory>;
    getContractFactory(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DogLike__factory>;
    getContractFactory(
      name: "FlipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlipLike__factory>;
    getContractFactory(
      name: "GemInfo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemInfo__factory>;
    getContractFactory(
      name: "IlkRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IlkRegistry__factory>;
    getContractFactory(
      name: "JoinLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JoinLike__factory>;
    getContractFactory(
      name: "SpotLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpotLike__factory>;
    getContractFactory(
      name: "TokenLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "DaiJoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaiJoin__factory>;
    getContractFactory(
      name: "DSTokenLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSTokenLike__factory>;
    getContractFactory(
      name: "GemJoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemJoin__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Jug",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Jug__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "LibNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibNote__factory>;
    getContractFactory(
      name: "MedianGnoUsd",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MedianGnoUsd__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IPulsexV1OracleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPulsexV1OracleFactory__factory>;
    getContractFactory(
      name: "MeadianLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MeadianLike__factory>;
    getContractFactory(
      name: "OmegaPokerFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OmegaPokerFeed__factory>;
    getContractFactory(
      name: "DSAuth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuth__factory>;
    getContractFactory(
      name: "DSAuthEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuthEvents__factory>;
    getContractFactory(
      name: "DSAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuthority__factory>;
    getContractFactory(
      name: "DSNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSNote__factory>;
    getContractFactory(
      name: "DSThing",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSThing__factory>;
    getContractFactory(
      name: "DSValue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSValue__factory>;
    getContractFactory(
      name: "LibNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibNote__factory>;
    getContractFactory(
      name: "OSM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OSM__factory>;
    getContractFactory(
      name: "Pot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pot__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PipLike__factory>;
    getContractFactory(
      name: "Spotter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Spotter__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "DssAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DssAction__factory>;
    getContractFactory(
      name: "Changelog",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Changelog__factory>;
    getContractFactory(
      name: "DssExec",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DssExec__factory>;
    getContractFactory(
      name: "PauseAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PauseAbstract__factory>;
    getContractFactory(
      name: "SpellAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpellAction__factory>;
    getContractFactory(
      name: "Authorizable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authorizable__factory>;
    getContractFactory(
      name: "ChainlogLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlogLike__factory>;
    getContractFactory(
      name: "ClipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClipLike__factory>;
    getContractFactory(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DogLike__factory>;
    getContractFactory(
      name: "Drippable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Drippable__factory>;
    getContractFactory(
      name: "DssExecLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DssExecLib__factory>;
    getContractFactory(
      name: "DssVat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DssVat__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "Fileable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fileable__factory>;
    getContractFactory(
      name: "IAMLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAMLike__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "JoinLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JoinLike__factory>;
    getContractFactory(
      name: "LerpFactoryLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LerpFactoryLike__factory>;
    getContractFactory(
      name: "LerpLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LerpLike__factory>;
    getContractFactory(
      name: "MomLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MomLike__factory>;
    getContractFactory(
      name: "OracleLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleLike__factory>;
    getContractFactory(
      name: "Pricing",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pricing__factory>;
    getContractFactory(
      name: "RegistryLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegistryLike__factory>;
    getContractFactory(
      name: "RwaOracleLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RwaOracleLike__factory>;
    getContractFactory(
      name: "Vat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vat__factory>;
    getContractFactory(
      name: "FlapLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlapLike__factory>;
    getContractFactory(
      name: "FlopLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlopLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Vow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vow__factory>;

    getContractAt(
      name: "Abacus",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Abacus>;
    getContractAt(
      name: "ExponentialDecrease",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ExponentialDecrease>;
    getContractAt(
      name: "LinearDecrease",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LinearDecrease>;
    getContractAt(
      name: "StairstepExponentialDecrease",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StairstepExponentialDecrease>;
    getContractAt(
      name: "Cat",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Cat>;
    getContractAt(
      name: "Kicker",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Kicker>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "VowLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VowLike>;
    getContractAt(
      name: "ChainLog",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainLog>;
    getContractAt(
      name: "AbacusLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AbacusLike>;
    getContractAt(
      name: "Clipper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Clipper>;
    getContractAt(
      name: "ClipperCallee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClipperCallee>;
    getContractAt(
      name: "DogLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DogLike>;
    getContractAt(
      name: "PipLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PipLike>;
    getContractAt(
      name: "SpotterLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SpotterLike>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Cure",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Cure>;
    getContractAt(
      name: "SourceLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SourceLike>;
    getContractAt(
      name: "CurveLPOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveLPOracle>;
    getContractAt(
      name: "CurvePoolLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CurvePoolLike>;
    getContractAt(
      name: "OracleLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleLike>;
    getContractAt(
      name: "TokenLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenLike>;
    getContractAt(
      name: "Dai",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Dai>;
    getContractAt(
      name: "ChainlogLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlogLike>;
    getContractAt(
      name: "DaiPoker",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DaiPoker>;
    getContractAt(
      name: "Fileable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Fileable>;
    getContractAt(
      name: "IPulsexV1OracleFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPulsexV1OracleFactory>;
    getContractAt(
      name: "ClipperLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClipperLike>;
    getContractAt(
      name: "Dog",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Dog>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "VowLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VowLike>;
    getContractAt(
      name: "DSAuth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuth>;
    getContractAt(
      name: "DSAuthEvents",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuthEvents>;
    getContractAt(
      name: "DSAuthority",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuthority>;
    getContractAt(
      name: "DSNote",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSNote>;
    getContractAt(
      name: "DSPause",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSPause>;
    getContractAt(
      name: "DSPauseProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSPauseProxy>;
    getContractAt(
      name: "Drippable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Drippable>;
    getContractAt(
      name: "DssSpell",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DssSpell>;
    getContractAt(
      name: "DssSpellAction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DssSpellAction>;
    getContractAt(
      name: "GemLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "IlkRegLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IlkRegLike>;
    getContractAt(
      name: "OracleLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleLike>;
    getContractAt(
      name: "PauseLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PauseLike>;
    getContractAt(
      name: "CatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CatLike>;
    getContractAt(
      name: "ClipLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClipLike>;
    getContractAt(
      name: "CureLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CureLike>;
    getContractAt(
      name: "DogLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DogLike>;
    getContractAt(
      name: "End",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.End>;
    getContractAt(
      name: "FlipLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FlipLike>;
    getContractAt(
      name: "PipLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PipLike>;
    getContractAt(
      name: "PotLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PotLike>;
    getContractAt(
      name: "SpotLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SpotLike>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "VowLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VowLike>;
    getContractAt(
      name: "Flapper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Flapper>;
    getContractAt(
      name: "GemLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "CatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CatLike>;
    getContractAt(
      name: "Flipper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Flipper>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Flopper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Flopper>;
    getContractAt(
      name: "GemLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "VowLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VowLike>;
    getContractAt(
      name: "CatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CatLike>;
    getContractAt(
      name: "ClipLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClipLike>;
    getContractAt(
      name: "DogLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DogLike>;
    getContractAt(
      name: "FlipLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FlipLike>;
    getContractAt(
      name: "GemInfo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GemInfo>;
    getContractAt(
      name: "IlkRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IlkRegistry>;
    getContractAt(
      name: "JoinLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.JoinLike>;
    getContractAt(
      name: "SpotLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SpotLike>;
    getContractAt(
      name: "TokenLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenLike>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "DaiJoin",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DaiJoin>;
    getContractAt(
      name: "DSTokenLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSTokenLike>;
    getContractAt(
      name: "GemJoin",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GemJoin>;
    getContractAt(
      name: "GemLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Jug",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Jug>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "LibNote",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibNote>;
    getContractAt(
      name: "MedianGnoUsd",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MedianGnoUsd>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IPulsexV1OracleFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPulsexV1OracleFactory>;
    getContractAt(
      name: "MeadianLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MeadianLike>;
    getContractAt(
      name: "OmegaPokerFeed",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OmegaPokerFeed>;
    getContractAt(
      name: "DSAuth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuth>;
    getContractAt(
      name: "DSAuthEvents",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuthEvents>;
    getContractAt(
      name: "DSAuthority",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuthority>;
    getContractAt(
      name: "DSNote",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSNote>;
    getContractAt(
      name: "DSThing",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSThing>;
    getContractAt(
      name: "DSValue",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DSValue>;
    getContractAt(
      name: "LibNote",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibNote>;
    getContractAt(
      name: "OSM",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OSM>;
    getContractAt(
      name: "Pot",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pot>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "PipLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PipLike>;
    getContractAt(
      name: "Spotter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Spotter>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "DssAction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DssAction>;
    getContractAt(
      name: "Changelog",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Changelog>;
    getContractAt(
      name: "DssExec",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DssExec>;
    getContractAt(
      name: "PauseAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PauseAbstract>;
    getContractAt(
      name: "SpellAction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SpellAction>;
    getContractAt(
      name: "Authorizable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Authorizable>;
    getContractAt(
      name: "ChainlogLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlogLike>;
    getContractAt(
      name: "ClipLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClipLike>;
    getContractAt(
      name: "DogLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DogLike>;
    getContractAt(
      name: "Drippable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Drippable>;
    getContractAt(
      name: "DssExecLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DssExecLib>;
    getContractAt(
      name: "DssVat",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DssVat>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "Fileable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Fileable>;
    getContractAt(
      name: "IAMLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAMLike>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "JoinLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.JoinLike>;
    getContractAt(
      name: "LerpFactoryLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LerpFactoryLike>;
    getContractAt(
      name: "LerpLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LerpLike>;
    getContractAt(
      name: "MomLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MomLike>;
    getContractAt(
      name: "OracleLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleLike>;
    getContractAt(
      name: "Pricing",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pricing>;
    getContractAt(
      name: "RegistryLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegistryLike>;
    getContractAt(
      name: "RwaOracleLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RwaOracleLike>;
    getContractAt(
      name: "Vat",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Vat>;
    getContractAt(
      name: "FlapLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FlapLike>;
    getContractAt(
      name: "FlopLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FlopLike>;
    getContractAt(
      name: "VatLike",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Vow",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Vow>;

    deployContract(
      name: "Abacus",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Abacus>;
    deployContract(
      name: "ExponentialDecrease",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExponentialDecrease>;
    deployContract(
      name: "LinearDecrease",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LinearDecrease>;
    deployContract(
      name: "StairstepExponentialDecrease",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StairstepExponentialDecrease>;
    deployContract(
      name: "Cat",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Cat>;
    deployContract(
      name: "Kicker",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Kicker>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VowLike>;
    deployContract(
      name: "ChainLog",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainLog>;
    deployContract(
      name: "AbacusLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbacusLike>;
    deployContract(
      name: "Clipper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Clipper>;
    deployContract(
      name: "ClipperCallee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipperCallee>;
    deployContract(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DogLike>;
    deployContract(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PipLike>;
    deployContract(
      name: "SpotterLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpotterLike>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "Cure",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Cure>;
    deployContract(
      name: "SourceLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SourceLike>;
    deployContract(
      name: "CurveLPOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CurveLPOracle>;
    deployContract(
      name: "CurvePoolLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CurvePoolLike>;
    deployContract(
      name: "OracleLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleLike>;
    deployContract(
      name: "TokenLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenLike>;
    deployContract(
      name: "Dai",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Dai>;
    deployContract(
      name: "ChainlogLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlogLike>;
    deployContract(
      name: "DaiPoker",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DaiPoker>;
    deployContract(
      name: "Fileable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Fileable>;
    deployContract(
      name: "IPulsexV1OracleFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPulsexV1OracleFactory>;
    deployContract(
      name: "ClipperLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipperLike>;
    deployContract(
      name: "Dog",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Dog>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VowLike>;
    deployContract(
      name: "DSAuth",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuth>;
    deployContract(
      name: "DSAuthEvents",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuthEvents>;
    deployContract(
      name: "DSAuthority",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuthority>;
    deployContract(
      name: "DSNote",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSNote>;
    deployContract(
      name: "DSPause",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSPause>;
    deployContract(
      name: "DSPauseProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSPauseProxy>;
    deployContract(
      name: "Drippable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drippable>;
    deployContract(
      name: "DssSpell",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssSpell>;
    deployContract(
      name: "DssSpellAction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssSpellAction>;
    deployContract(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemLike>;
    deployContract(
      name: "IlkRegLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IlkRegLike>;
    deployContract(
      name: "OracleLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleLike>;
    deployContract(
      name: "PauseLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PauseLike>;
    deployContract(
      name: "CatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CatLike>;
    deployContract(
      name: "ClipLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipLike>;
    deployContract(
      name: "CureLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CureLike>;
    deployContract(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DogLike>;
    deployContract(
      name: "End",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.End>;
    deployContract(
      name: "FlipLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlipLike>;
    deployContract(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PipLike>;
    deployContract(
      name: "PotLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PotLike>;
    deployContract(
      name: "SpotLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpotLike>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VowLike>;
    deployContract(
      name: "Flapper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Flapper>;
    deployContract(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemLike>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "CatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CatLike>;
    deployContract(
      name: "Flipper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Flipper>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "Flopper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Flopper>;
    deployContract(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemLike>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VowLike>;
    deployContract(
      name: "CatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CatLike>;
    deployContract(
      name: "ClipLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipLike>;
    deployContract(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DogLike>;
    deployContract(
      name: "FlipLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlipLike>;
    deployContract(
      name: "GemInfo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemInfo>;
    deployContract(
      name: "IlkRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IlkRegistry>;
    deployContract(
      name: "JoinLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.JoinLike>;
    deployContract(
      name: "SpotLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpotLike>;
    deployContract(
      name: "TokenLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenLike>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "DaiJoin",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DaiJoin>;
    deployContract(
      name: "DSTokenLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSTokenLike>;
    deployContract(
      name: "GemJoin",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemJoin>;
    deployContract(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemLike>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "Jug",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Jug>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "LibNote",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibNote>;
    deployContract(
      name: "MedianGnoUsd",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MedianGnoUsd>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IPulsexV1OracleFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPulsexV1OracleFactory>;
    deployContract(
      name: "MeadianLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MeadianLike>;
    deployContract(
      name: "OmegaPokerFeed",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OmegaPokerFeed>;
    deployContract(
      name: "DSAuth",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuth>;
    deployContract(
      name: "DSAuthEvents",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuthEvents>;
    deployContract(
      name: "DSAuthority",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuthority>;
    deployContract(
      name: "DSNote",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSNote>;
    deployContract(
      name: "DSThing",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSThing>;
    deployContract(
      name: "DSValue",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSValue>;
    deployContract(
      name: "LibNote",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibNote>;
    deployContract(
      name: "OSM",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OSM>;
    deployContract(
      name: "Pot",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pot>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PipLike>;
    deployContract(
      name: "Spotter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Spotter>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "DssAction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssAction>;
    deployContract(
      name: "Changelog",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Changelog>;
    deployContract(
      name: "DssExec",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssExec>;
    deployContract(
      name: "PauseAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PauseAbstract>;
    deployContract(
      name: "SpellAction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpellAction>;
    deployContract(
      name: "Authorizable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Authorizable>;
    deployContract(
      name: "ChainlogLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlogLike>;
    deployContract(
      name: "ClipLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipLike>;
    deployContract(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DogLike>;
    deployContract(
      name: "Drippable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drippable>;
    deployContract(
      name: "DssExecLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssExecLib>;
    deployContract(
      name: "DssVat",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssVat>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "Fileable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Fileable>;
    deployContract(
      name: "IAMLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAMLike>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "JoinLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.JoinLike>;
    deployContract(
      name: "LerpFactoryLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LerpFactoryLike>;
    deployContract(
      name: "LerpLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LerpLike>;
    deployContract(
      name: "MomLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MomLike>;
    deployContract(
      name: "OracleLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleLike>;
    deployContract(
      name: "Pricing",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pricing>;
    deployContract(
      name: "RegistryLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegistryLike>;
    deployContract(
      name: "RwaOracleLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RwaOracleLike>;
    deployContract(
      name: "Vat",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Vat>;
    deployContract(
      name: "FlapLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlapLike>;
    deployContract(
      name: "FlopLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlopLike>;
    deployContract(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "Vow",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Vow>;

    deployContract(
      name: "Abacus",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Abacus>;
    deployContract(
      name: "ExponentialDecrease",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExponentialDecrease>;
    deployContract(
      name: "LinearDecrease",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LinearDecrease>;
    deployContract(
      name: "StairstepExponentialDecrease",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StairstepExponentialDecrease>;
    deployContract(
      name: "Cat",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Cat>;
    deployContract(
      name: "Kicker",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Kicker>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "VowLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VowLike>;
    deployContract(
      name: "ChainLog",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainLog>;
    deployContract(
      name: "AbacusLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbacusLike>;
    deployContract(
      name: "Clipper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Clipper>;
    deployContract(
      name: "ClipperCallee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipperCallee>;
    deployContract(
      name: "DogLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DogLike>;
    deployContract(
      name: "PipLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PipLike>;
    deployContract(
      name: "SpotterLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpotterLike>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "Cure",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Cure>;
    deployContract(
      name: "SourceLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SourceLike>;
    deployContract(
      name: "CurveLPOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CurveLPOracle>;
    deployContract(
      name: "CurvePoolLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CurvePoolLike>;
    deployContract(
      name: "OracleLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleLike>;
    deployContract(
      name: "TokenLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenLike>;
    deployContract(
      name: "Dai",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Dai>;
    deployContract(
      name: "ChainlogLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlogLike>;
    deployContract(
      name: "DaiPoker",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DaiPoker>;
    deployContract(
      name: "Fileable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Fileable>;
    deployContract(
      name: "IPulsexV1OracleFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPulsexV1OracleFactory>;
    deployContract(
      name: "ClipperLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipperLike>;
    deployContract(
      name: "Dog",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Dog>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "VowLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VowLike>;
    deployContract(
      name: "DSAuth",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuth>;
    deployContract(
      name: "DSAuthEvents",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuthEvents>;
    deployContract(
      name: "DSAuthority",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuthority>;
    deployContract(
      name: "DSNote",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSNote>;
    deployContract(
      name: "DSPause",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSPause>;
    deployContract(
      name: "DSPauseProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSPauseProxy>;
    deployContract(
      name: "Drippable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drippable>;
    deployContract(
      name: "DssSpell",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssSpell>;
    deployContract(
      name: "DssSpellAction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssSpellAction>;
    deployContract(
      name: "GemLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemLike>;
    deployContract(
      name: "IlkRegLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IlkRegLike>;
    deployContract(
      name: "OracleLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleLike>;
    deployContract(
      name: "PauseLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PauseLike>;
    deployContract(
      name: "CatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CatLike>;
    deployContract(
      name: "ClipLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipLike>;
    deployContract(
      name: "CureLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CureLike>;
    deployContract(
      name: "DogLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DogLike>;
    deployContract(
      name: "End",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.End>;
    deployContract(
      name: "FlipLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlipLike>;
    deployContract(
      name: "PipLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PipLike>;
    deployContract(
      name: "PotLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PotLike>;
    deployContract(
      name: "SpotLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpotLike>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "VowLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VowLike>;
    deployContract(
      name: "Flapper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Flapper>;
    deployContract(
      name: "GemLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemLike>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "CatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CatLike>;
    deployContract(
      name: "Flipper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Flipper>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "Flopper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Flopper>;
    deployContract(
      name: "GemLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemLike>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "VowLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VowLike>;
    deployContract(
      name: "CatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CatLike>;
    deployContract(
      name: "ClipLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipLike>;
    deployContract(
      name: "DogLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DogLike>;
    deployContract(
      name: "FlipLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlipLike>;
    deployContract(
      name: "GemInfo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemInfo>;
    deployContract(
      name: "IlkRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IlkRegistry>;
    deployContract(
      name: "JoinLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.JoinLike>;
    deployContract(
      name: "SpotLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpotLike>;
    deployContract(
      name: "TokenLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenLike>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "DaiJoin",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DaiJoin>;
    deployContract(
      name: "DSTokenLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSTokenLike>;
    deployContract(
      name: "GemJoin",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemJoin>;
    deployContract(
      name: "GemLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GemLike>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "Jug",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Jug>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "LibNote",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibNote>;
    deployContract(
      name: "MedianGnoUsd",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MedianGnoUsd>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IPulsexV1OracleFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPulsexV1OracleFactory>;
    deployContract(
      name: "MeadianLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MeadianLike>;
    deployContract(
      name: "OmegaPokerFeed",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OmegaPokerFeed>;
    deployContract(
      name: "DSAuth",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuth>;
    deployContract(
      name: "DSAuthEvents",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuthEvents>;
    deployContract(
      name: "DSAuthority",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSAuthority>;
    deployContract(
      name: "DSNote",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSNote>;
    deployContract(
      name: "DSThing",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSThing>;
    deployContract(
      name: "DSValue",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DSValue>;
    deployContract(
      name: "LibNote",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibNote>;
    deployContract(
      name: "OSM",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OSM>;
    deployContract(
      name: "Pot",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pot>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "PipLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PipLike>;
    deployContract(
      name: "Spotter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Spotter>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "DssAction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssAction>;
    deployContract(
      name: "Changelog",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Changelog>;
    deployContract(
      name: "DssExec",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssExec>;
    deployContract(
      name: "PauseAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PauseAbstract>;
    deployContract(
      name: "SpellAction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SpellAction>;
    deployContract(
      name: "Authorizable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Authorizable>;
    deployContract(
      name: "ChainlogLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlogLike>;
    deployContract(
      name: "ClipLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClipLike>;
    deployContract(
      name: "DogLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DogLike>;
    deployContract(
      name: "Drippable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drippable>;
    deployContract(
      name: "DssExecLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssExecLib>;
    deployContract(
      name: "DssVat",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DssVat>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "Fileable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Fileable>;
    deployContract(
      name: "IAMLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAMLike>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "JoinLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.JoinLike>;
    deployContract(
      name: "LerpFactoryLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LerpFactoryLike>;
    deployContract(
      name: "LerpLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LerpLike>;
    deployContract(
      name: "MomLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MomLike>;
    deployContract(
      name: "OracleLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleLike>;
    deployContract(
      name: "Pricing",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pricing>;
    deployContract(
      name: "RegistryLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegistryLike>;
    deployContract(
      name: "RwaOracleLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RwaOracleLike>;
    deployContract(
      name: "Vat",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Vat>;
    deployContract(
      name: "FlapLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlapLike>;
    deployContract(
      name: "FlopLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlopLike>;
    deployContract(
      name: "VatLike",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VatLike>;
    deployContract(
      name: "Vow",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Vow>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
