/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CurveLPOracle,
  CurveLPOracleInterface,
} from "../../CurvePoolLpOracle.sol/CurveLPOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ward",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_wat",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_orbs",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_nonreentrant",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Deny",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "Diss",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "Kiss",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "orb",
        type: "address",
      },
    ],
    name: "Link",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Rely",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Start",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "hop",
        type: "uint256",
      },
    ],
    name: "Step",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Stop",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "curVal",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "nxtVal",
        type: "uint128",
      },
    ],
    name: "Value",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bud",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_a",
        type: "address[]",
      },
    ],
    name: "diss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_a",
        type: "address",
      },
    ],
    name: "diss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hop",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_a",
        type: "address[]",
      },
    ],
    name: "kiss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_a",
        type: "address",
      },
    ],
    name: "kiss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_orb",
        type: "address",
      },
    ],
    name: "link",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ncoins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonreentrant",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orbs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pass",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peek",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peep",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poke",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "read",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "src",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_hop",
        type: "uint16",
      },
    ],
    name: "step",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopped",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wat",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zph",
    outputs: [
      {
        internalType: "uint232",
        name: "",
        type: "uint232",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zzz",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610120604052610e106001806101000a81548161ffff021916908361ffff1602179055503480156200003057600080fd5b50604051620037143803806200371483398181016040528101906200005691906200069e565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603620000c8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bf90620007a6565b60405180910390fd5b6000825190508473ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508473ffffffffffffffffffffffffffffffffffffffff166382c630666040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200014e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001749190620007c8565b73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508360c081815250508060e081815250508115156101008115158152505060005b81811015620002ed57600073ffffffffffffffffffffffffffffffffffffffff16848281518110620001fe57620001fd620007fa565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036200025f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002569062000879565b60405180910390fd5b6005848281518110620002775762000276620007fa565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080600101915050620001c7565b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160362000360576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200035790620008eb565b60405180910390fd5b60016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff167fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6060405160405180910390a25050505050506200090d565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000479826200044c565b9050919050565b6200048b816200046c565b81146200049757600080fd5b50565b600081519050620004ab8162000480565b92915050565b6000819050919050565b620004c681620004b1565b8114620004d257600080fd5b50565b600081519050620004e681620004bb565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200053c82620004f1565b810181811067ffffffffffffffff821117156200055e576200055d62000502565b5b80604052505050565b60006200057362000438565b905062000581828262000531565b919050565b600067ffffffffffffffff821115620005a457620005a362000502565b5b602082029050602081019050919050565b600080fd5b6000620005d1620005cb8462000586565b62000567565b90508083825260208201905060208402830185811115620005f757620005f6620005b5565b5b835b818110156200062457806200060f88826200049a565b845260208401935050602081019050620005f9565b5050509392505050565b600082601f830112620006465762000645620004ec565b5b815162000658848260208601620005ba565b91505092915050565b60008115159050919050565b620006788162000661565b81146200068457600080fd5b50565b60008151905062000698816200066d565b92915050565b600080600080600060a08688031215620006bd57620006bc62000442565b5b6000620006cd888289016200049a565b9550506020620006e0888289016200049a565b9450506040620006f388828901620004d5565b935050606086015167ffffffffffffffff81111562000717576200071662000447565b5b62000725888289016200062e565b9250506080620007388882890162000687565b9150509295509295909350565b600082825260208201905092915050565b7f43757276654c504f7261636c652f696e76616c69642d706f6f6c000000000000600082015250565b60006200078e601a8362000745565b91506200079b8262000756565b602082019050919050565b60006020820190508181036000830152620007c1816200077f565b9050919050565b600060208284031215620007e157620007e062000442565b5b6000620007f1848285016200049a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f43757276654c504f7261636c652f696e76616c69642d6f726200000000000000600082015250565b60006200086160198362000745565b91506200086e8262000829565b602082019050919050565b60006020820190508181036000830152620008948162000852565b9050919050565b7f43757276654c504f7261636c652f776172642d30000000000000000000000000600082015250565b6000620008d360148362000745565b9150620008e0826200089b565b602082019050919050565b600060208201905081810360008301526200090681620008c4565b9050919050565b60805160a05160c05160e05161010051612d986200097c60003960008181610f96015261129f0152600081816112e701526117d3015260006114760152600081816108c501528181610b1b01528181610bba01528181610c830152610fbd015260006112c30152612d986000f3fe6080604052600436106101a05760003560e01c806365af7909116100ec578063a7a1ed721161008a578063be9a655511610064578063be9a65551461056e578063bf353dbb14610585578063e38e2cfb146105c2578063f29c29c4146105eb576101a7565b8063a7a1ed72146104ed578063a9c52a3914610518578063b0b8579b14610543576101a7565b806375f12b21116100c657806375f12b211461043157806397783a111461045c5780639c52a7f114610499578063a4dff0a2146104c2576101a7565b806365af7909146103b657806365c4ce7a146103df57806365fae35e14610408576101a7565b80632e7dc6af116101595780634ca29923116101335780634ca29923146102f75780634fce7a2a1461032257806357de26a41461035f57806359e02dd71461038a576101a7565b80632e7dc6af14610278578063371f8dae146102a357806346d4577d146102ce576101a7565b806307da68f5146101ac5780630e5a6c70146101c357806316f0115b146101ef578063181783581461021a5780631b25b65f1461022457806328cfb3de1461024d576101a7565b366101a757005b600080fd5b3480156101b857600080fd5b506101c1610614565b005b3480156101cf57600080fd5b506101d86107c8565b6040516101e69291906121f9565b60405180910390f35b3480156101fb57600080fd5b506102046108c3565b6040516102119190612263565b60405180910390f35b6102226108e7565b005b34801561023057600080fd5b5061024b600480360381019061024691906122ed565b61109c565b005b34801561025957600080fd5b5061026261129d565b60405161026f919061233a565b60405180910390f35b34801561028457600080fd5b5061028d6112c1565b60405161029a9190612263565b60405180910390f35b3480156102af57600080fd5b506102b86112e5565b6040516102c5919061236e565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f091906122ed565b611309565b005b34801561030357600080fd5b5061030c611474565b6040516103199190612389565b60405180910390f35b34801561032e57600080fd5b50610349600480360381019061034491906123d0565b611498565b604051610356919061236e565b60405180910390f35b34801561036b57600080fd5b506103746114b0565b6040516103819190612389565b60405180910390f35b34801561039657600080fd5b5061039f6115e6565b6040516103ad9291906121f9565b60405180910390f35b3480156103c257600080fd5b506103dd60048036038101906103d89190612429565b6116e1565b005b3480156103eb57600080fd5b50610406600480360381019061040191906123d0565b6118cd565b005b34801561041457600080fd5b5061042f600480360381019061042a91906123d0565b6119cd565b005b34801561043d57600080fd5b50610446611ad8565b6040516104539190612485565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e91906124a0565b611aeb565b6040516104909190612263565b60405180910390f35b3480156104a557600080fd5b506104c060048036038101906104bb91906123d0565b611b2a565b005b3480156104ce57600080fd5b506104d7611c35565b6040516104e4919061236e565b60405180910390f35b3480156104f957600080fd5b50610502611cff565b60405161050f919061233a565b60405180910390f35b34801561052457600080fd5b5061052d611d54565b60405161053a9190612505565b60405180910390f35b34801561054f57600080fd5b50610558611d83565b604051610565919061253d565b60405180910390f35b34801561057a57600080fd5b50610583611d95565b005b34801561059157600080fd5b506105ac60048036038101906105a791906123d0565b611e60565b6040516105b9919061236e565b60405180910390f35b3480156105ce57600080fd5b506105e960048036038101906105e49190612584565b611e78565b005b3480156105f757600080fd5b50610612600480360381019061060d91906123d0565b612056565b005b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c9061260e565b60405180910390fd5b60018060006101000a81548160ff021916908360ff1602179055506003600080820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550506004600080820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550506000600160036101000a8154817cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055507fbedf0f4abfe86d4ffad593d9607fe70e83ea706033d44d24b3b6283cf3fc4f6b60405160405180910390a1565b6000806001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461084d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108449061267a565b60405180910390fd5b600460000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1660001b6001600460000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1614915091509091565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600060015460ff8116925061ffff8160081c1693508060181c91505060008214610949576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610940906126e6565b60405180910390fd5b8042101561098c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098390612752565b60405180910390fd5b505060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050600060056000815481106109ca576109c9612772565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6391906127b6565b905060006005600181548110610a7c57610a7b612772565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1591906127b6565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634903b0d160006040518263ffffffff1660e01b8152600401610b739190612828565b602060405180830381865afa158015610b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb491906127b6565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634903b0d160016040518263ffffffff1660e01b8152600401610c12919061287e565b602060405180830381865afa158015610c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5391906127b6565b90506000849050600084905060008483610c6d91906128c8565b905060008483610c7d91906128c8565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166382c630666040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190612937565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e91906127b6565b905060008284610d8e9190612964565b905060008282610d9e91906129e9565b9050600060046040518060400160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681525050905080600360008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050506040518060400160405280836fffffffffffffffffffffffffffffffff16815260200160016fffffffffffffffffffffffffffffffff16815250600460008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050508d60081b8e420160181b016001557f00000000000000000000000000000000000000000000000000000000000000001561105d57367f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635b36389c6000836040518363ffffffff1660e01b8152600401611017929190612a39565b6020604051808303816000875af1158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a91906127b6565b50505b7f80a5d0081d7e9a7bdb15ef207c6e0772f0f56d24317693206c0e47408f2d0b7381600001518e604051611092929190612a8d565b60405180910390a1005b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461111d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111149061260e565b60405180910390fd5b60005b8282905081101561129857600073ffffffffffffffffffffffffffffffffffffffff1683838381811061115657611155612772565b5b905060200201602081019061116b91906123d0565b73ffffffffffffffffffffffffffffffffffffffff16036111c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b890612b02565b60405180910390fd5b6001600260008585858181106111da576111d9612772565b5b90506020020160208101906111ef91906123d0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6ffc0fabf0709270e42087e84a3bfc36041d3b281266d04ae1962185092fb24483838381811061126157611260612772565b5b905060200201602081019061127691906123d0565b6040516112839190612263565b60405180910390a18080600101915050611120565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461138a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113819061260e565b60405180910390fd5b60005b8282905081101561146f576000600260008585858181106113b1576113b0612772565b5b90506020020160208101906113c691906123d0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f12fdafd291eb287a54e3416070923d22aa5072f5ee04c4fb8361615e7508a37c83838381811061143857611437612772565b5b905060200201602081019061144d91906123d0565b60405161145a9190612263565b60405180910390a1808060010191505061138d565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026020528060005260406000206000915090505481565b60006001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152b9061267a565b60405180910390fd5b6001600360000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16146115aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a190612b6e565b60405180910390fd5b600360000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1660001b905090565b6000806001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461166b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116629061267a565b60405180910390fd5b600360000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1660001b6001600360000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1614915091509091565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611762576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117599061260e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c890612bda565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008210611833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182a90612c46565b60405180910390fd5b806005838154811061184857611847612772565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f57e1d18531e0ed6c4f60bf6039e5719aa115e43e43847525125856433a69f7a782826040516118c1929190612c66565b60405180910390a15050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461194e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119459061260e565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f12fdafd291eb287a54e3416070923d22aa5072f5ee04c4fb8361615e7508a37c816040516119c29190612263565b60405180910390a150565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a459061260e565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6060405160405180910390a250565b600160009054906101000a900460ff1681565b60058181548110611afb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba29061260e565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b60405160405180910390a250565b600080600160039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1603611c915760009050611cfc565b60018054906101000a900461ffff1661ffff16600160039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611cda9190612c8f565b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690505b90565b6000600160039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16421015905090565b600160039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681565b60018054906101000a900461ffff1681565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611e16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0d9061260e565b60405180910390fd5b6000600160006101000a81548160ff021916908360ff1602179055507f1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b60405160405180910390a1565b60006020528060005260406000206000915090505481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef09061260e565b60405180910390fd5b600060018054906101000a900461ffff169050816001806101000a81548161ffff021916908361ffff1602179055508061ffff16600160039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16111561201b578161ffff168161ffff16600160039054906101000a90047cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611fbe9190612c8f565b611fc89190612cc3565b600160036101000a8154817cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055505b7fd5cae49d972f01d170fb2d3409c5f318698639863c0403e59e4af06e0ce928178260405161204a9190612d47565b60405180910390a15050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146120d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ce9061260e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161213d90612b02565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6ffc0fabf0709270e42087e84a3bfc36041d3b281266d04ae1962185092fb244816040516121ba9190612263565b60405180910390a150565b6000819050919050565b6121d8816121c5565b82525050565b60008115159050919050565b6121f3816121de565b82525050565b600060408201905061220e60008301856121cf565b61221b60208301846121ea565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061224d82612222565b9050919050565b61225d81612242565b82525050565b60006020820190506122786000830184612254565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126122ad576122ac612288565b5b8235905067ffffffffffffffff8111156122ca576122c961228d565b5b6020830191508360208202830111156122e6576122e5612292565b5b9250929050565b600080602083850312156123045761230361227e565b5b600083013567ffffffffffffffff81111561232257612321612283565b5b61232e85828601612297565b92509250509250929050565b600060208201905061234f60008301846121ea565b92915050565b6000819050919050565b61236881612355565b82525050565b6000602082019050612383600083018461235f565b92915050565b600060208201905061239e60008301846121cf565b92915050565b6123ad81612242565b81146123b857600080fd5b50565b6000813590506123ca816123a4565b92915050565b6000602082840312156123e6576123e561227e565b5b60006123f4848285016123bb565b91505092915050565b61240681612355565b811461241157600080fd5b50565b600081359050612423816123fd565b92915050565b600080604083850312156124405761243f61227e565b5b600061244e85828601612414565b925050602061245f858286016123bb565b9150509250929050565b600060ff82169050919050565b61247f81612469565b82525050565b600060208201905061249a6000830184612476565b92915050565b6000602082840312156124b6576124b561227e565b5b60006124c484828501612414565b91505092915050565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6124ff816124cd565b82525050565b600060208201905061251a60008301846124f6565b92915050565b600061ffff82169050919050565b61253781612520565b82525050565b6000602082019050612552600083018461252e565b92915050565b61256181612520565b811461256c57600080fd5b50565b60008135905061257e81612558565b92915050565b60006020828403121561259a5761259961227e565b5b60006125a88482850161256f565b91505092915050565b600082825260208201905092915050565b7f43757276654c504f7261636c652f6e6f742d617574686f72697a656400000000600082015250565b60006125f8601c836125b1565b9150612603826125c2565b602082019050919050565b60006020820190508181036000830152612627816125eb565b9050919050565b7f43757276654c504f7261636c652f6e6f742d77686974656c6973746564000000600082015250565b6000612664601d836125b1565b915061266f8261262e565b602082019050919050565b6000602082019050818103600083015261269381612657565b9050919050565b7f43757276654c504f7261636c652f69732d73746f707065640000000000000000600082015250565b60006126d06018836125b1565b91506126db8261269a565b602082019050919050565b600060208201905081810360008301526126ff816126c3565b9050919050565b7f43757276654c504f7261636c652f6e6f742d7061737365640000000000000000600082015250565b600061273c6018836125b1565b915061274782612706565b602082019050919050565b6000602082019050818103600083015261276b8161272f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815190506127b0816123fd565b92915050565b6000602082840312156127cc576127cb61227e565b5b60006127da848285016127a1565b91505092915050565b6000819050919050565b6000819050919050565b600061281261280d612808846127e3565b6127ed565b612355565b9050919050565b612822816127f7565b82525050565b600060208201905061283d6000830184612819565b92915050565b6000819050919050565b600061286861286361285e84612843565b6127ed565b612355565b9050919050565b6128788161284d565b82525050565b6000602082019050612893600083018461286f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128d382612355565b91506128de83612355565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561291757612916612899565b5b828202905092915050565b600081519050612931816123a4565b92915050565b60006020828403121561294d5761294c61227e565b5b600061295b84828501612922565b91505092915050565b600061296f82612355565b915061297a83612355565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156129af576129ae612899565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006129f482612355565b91506129ff83612355565b925082612a0f57612a0e6129ba565b5b828204905092915050565b82818337600083830152505050565b612a3560408383612a1a565b5050565b6000606082019050612a4e6000830185612819565b612a5b6020830184612a29565b9392505050565b60006fffffffffffffffffffffffffffffffff82169050919050565b612a8781612a62565b82525050565b6000604082019050612aa26000830185612a7e565b612aaf6020830184612a7e565b9392505050565b7f43757276654c504f7261636c652f6e6f2d636f6e74726163742d300000000000600082015250565b6000612aec601b836125b1565b9150612af782612ab6565b602082019050919050565b60006020820190508181036000830152612b1b81612adf565b9050919050565b7f43757276654c504f7261636c652f6e6f2d63757272656e742d76616c75650000600082015250565b6000612b58601e836125b1565b9150612b6382612b22565b602082019050919050565b60006020820190508181036000830152612b8781612b4b565b9050919050565b7f43757276654c504f7261636c652f696e76616c69642d6f726200000000000000600082015250565b6000612bc46019836125b1565b9150612bcf82612b8e565b602082019050919050565b60006020820190508181036000830152612bf381612bb7565b9050919050565b7f43757276654c504f7261636c652f696e76616c69642d6f72622d696e64657800600082015250565b6000612c30601f836125b1565b9150612c3b82612bfa565b602082019050919050565b60006020820190508181036000830152612c5f81612c23565b9050919050565b6000604082019050612c7b600083018561235f565b612c886020830184612254565b9392505050565b6000612c9a826124cd565b9150612ca5836124cd565b925082821015612cb857612cb7612899565b5b828203905092915050565b6000612cce826124cd565b9150612cd9836124cd565b9250827cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612d0b57612d0a612899565b5b828201905092915050565b6000612d31612d2c612d2784612520565b6127ed565b612355565b9050919050565b612d4181612d16565b82525050565b6000602082019050612d5c6000830184612d38565b9291505056fea264697066735822122091c8b20d1723b7449e2189287efbee2ac4f6fa43d555b7004f9d20277b86e97864736f6c634300080d0033";

type CurveLPOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveLPOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveLPOracle__factory extends ContractFactory {
  constructor(...args: CurveLPOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ward: AddressLike,
    _pool: AddressLike,
    _wat: BytesLike,
    _orbs: AddressLike[],
    _nonreentrant: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _ward,
      _pool,
      _wat,
      _orbs,
      _nonreentrant,
      overrides || {}
    );
  }
  override deploy(
    _ward: AddressLike,
    _pool: AddressLike,
    _wat: BytesLike,
    _orbs: AddressLike[],
    _nonreentrant: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _ward,
      _pool,
      _wat,
      _orbs,
      _nonreentrant,
      overrides || {}
    ) as Promise<
      CurveLPOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CurveLPOracle__factory {
    return super.connect(runner) as CurveLPOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveLPOracleInterface {
    return new Interface(_abi) as CurveLPOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CurveLPOracle {
    return new Contract(address, _abi, runner) as unknown as CurveLPOracle;
  }
}
