/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ChainLog, ChainLogInterface } from "../../chainlog.sol/ChainLog";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Deny",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Rely",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "RemoveAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "UpdateAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "ipfs",
        type: "string",
      },
    ],
    name: "UpdateIPFS",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "sha256sum",
        type: "string",
      },
    ],
    name: "UpdateSha256sum",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "UpdateVersion",
    type: "event",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ipfs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keys",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "removeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_ipfs",
        type: "string",
      },
    ],
    name: "setIPFS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_sha256sum",
        type: "string",
      },
    ],
    name: "setSha256sum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
    ],
    name: "setVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sha256sum",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200009c6040518060400160405280600581526020017f302e302e30000000000000000000000000000000000000000000000000000000815250620000d460201b60201c565b620000ce7f4348414e47454c4f470000000000000000000000000000000000000000000000306200024460201b60201c565b620005ad565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541462000189576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b8060039080519060200190620001a192919062000507565b507fc96e830455c6cd482ced2b3637de7e7f3c87ed0f17eff0999ba5e262ea44c67b816040518080602001828103825283818151815260200191508051906020019080838360005b8381101562000206578082015181840152602081019050620001e9565b50505050905090810190601f168015620002345780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414620002f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b60006200030b6200041360201b60201c565b11801562000346575060026001600084815260200190815260200160002060000154815481106200033857fe5b906000526020600020015482145b15620003a757806001600084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003ba565b620003b982826200042060201b60201c565b5b7fcf0ecd10d1399d98978051da48095f368d6f1fa3292d5fc09135b92aa2a4d7338282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600280549050905090565b6002829080600181540180825580915050600190039060005260206000200160009091909190915055604051806040016040528060016002805490500381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160006002600160028054905003815481106200049657fe5b906000526020600020015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200054a57805160ff19168380011785556200057b565b828001600101855582156200057b579182015b828111156200057a5782518255916020019190600101906200055d565b5b5090506200058a91906200058e565b5090565b5b80821115620005a95760008160009055506001016200058f565b5090565b61180380620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639507d39a11610097578063ca446dd911610066578063ca446dd914610582578063d19ac77a146105d0578063d7959cf91461068b578063f3295b931461070e57610100565b80639507d39a146104595780639c52a7f1146104b85780639faf6fb6146104fc578063bf353dbb1461052a57610100565b806354fd4d50116100d357806354fd4d501461021c57806365fae35e1461029f578063788bc78c146102e3578063884a631f1461039e57610100565b806306661abd146101055780630cb6aaf1146101235780630f560cd71461016557806321f8a721146101c4575b600080fd5b61010d610791565b6040518082815260200191505060405180910390f35b61014f6004803603602081101561013957600080fd5b810190808035906020019092919050505061079e565b6040518082815260200191505060405180910390f35b61016d6107bf565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101b0578082015181840152602081019050610195565b505050509050019250505060405180910390f35b6101f0600480360360208110156101da57600080fd5b8101908080359060200190929190505050610817565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102246108fa565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610264578082015181840152602081019050610249565b50505050905090810190601f1680156102915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e1600480360360208110156102b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610998565b005b61039c600480360360208110156102f957600080fd5b810190808035906020019064010000000081111561031657600080fd5b82018360208201111561032857600080fd5b8035906020019184600183028401116401000000008311171561034a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ae0565b005b610457600480360360208110156103b457600080fd5b81019080803590602001906401000000008111156103d157600080fd5b8201836020820111156103e357600080fd5b8035906020019184600183028401116401000000008311171561040557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c4a565b005b6104856004803603602081101561046f57600080fd5b8101908080359060200190929190505050610db4565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6104fa600480360360208110156104ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e26565b005b6105286004803603602081101561051257600080fd5b8101908080359060200190929190505050610f6e565b005b61056c6004803603602081101561054057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611065565b6040518082815260200191505060405180910390f35b6105ce6004803603604081101561059857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061107d565b005b610689600480360360208110156105e657600080fd5b810190808035906020019064010000000081111561060357600080fd5b82018360208201111561061557600080fd5b8035906020019184600183028401116401000000008311171561063757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611237565b005b6106936113a1565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106d35780820151818401526020810190506106b8565b50505050905090810190601f1680156107005780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61071661143f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561075657808201518184015260208101905061073b565b50505050905090810190601f1680156107835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000600280549050905090565b600281815481106107ab57fe5b906000526020600020016000915090505481565b6060600280548060200260200160405190810160405280929190818152602001828054801561080d57602002820191906000526020600020905b8154815260200190600101908083116107f9575b5050505050905090565b60006001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6473732d636861696e2d6c6f672f696e76616c69642d6b65790000000000000081525060200191505060405180910390fd5b919050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109905780601f1061096557610100808354040283529160200191610990565b820191906000526020600020905b81548152906001019060200180831161097357829003601f168201915b505050505081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610a4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6081604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610b94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b8060039080519060200190610baa929190611730565b507fc96e830455c6cd482ced2b3637de7e7f3c87ed0f17eff0999ba5e262ea44c67b816040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c0d578082015181840152602081019050610bf2565b50505050905090810190601f168015610c3a5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610cfe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b8060049080519060200190610d14929190611730565b507f6ce764b6ccabce70dd110fb75895ead7988d54d58fef7e8ee13a32d04c21f3b9816040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d77578082015181840152602081019050610d5c565b50505050905090810190601f168015610da45780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60008060028381548110610dc457fe5b90600052602060002001546001600060028681548110610de057fe5b9060005260206000200154815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691509150915091565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610eda576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611022576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b61102b816114dd565b7f236084b20b5721ddf3e40ed45b570186612a08edec64abae6894b60f315c54bc816040518082815260200191505060405180910390a150565b60006020528060005260406000206000915090505481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611131576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b600061113b610791565b1180156111745750600260016000848152602001908152602001600020600001548154811061116657fe5b906000526020600020015482145b156111d357806001600084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111de565b6111dd828261164a565b5b7fcf0ecd10d1399d98978051da48095f368d6f1fa3292d5fc09135b92aa2a4d7338282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436861696e4c6f672f6e6f742d617574686f72697a656400000000000000000081525060200191505060405180910390fd5b8060059080519060200190611301929190611730565b507fc7d51f843aa4e748744967527c18b55884fbbd978794939a53e6de466659169e816040518080602001828103825283818151815260200191508051906020019080838360005b83811015611364578082015181840152602081019050611349565b50505050905090810190601f1680156113915780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114375780601f1061140c57610100808354040283529160200191611437565b820191906000526020600020905b81548152906001019060200180831161141a57829003601f168201915b505050505081565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114d55780601f106114aa576101008083540402835291602001916114d5565b820191906000526020600020905b8154815290600101906020018083116114b857829003601f168201915b505050505081565b600060016000838152602001908152602001600020600001549050816002828154811061150657fe5b906000526020600020015414611584576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6473732d636861696e2d6c6f672f696e76616c69642d6b65790000000000000081525060200191505060405180910390fd5b600060026001600280549050038154811061159b57fe5b9060005260206000200154905080600283815481106115b657fe5b906000526020600020018190555081600160008381526020019081526020016000206000018190555060028054806115ea57fe5b60019003818190600052602060002001600090559055600160008481526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050565b6002829080600181540180825580915050600190039060005260206000200160009091909190915055604051806040016040528060016002805490500381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160006002600160028054905003815481106116bf57fe5b906000526020600020015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061177157805160ff191683800117855561179f565b8280016001018555821561179f579182015b8281111561179e578251825591602001919060010190611783565b5b5090506117ac91906117b0565b5090565b5b808211156117c95760008160009055506001016117b1565b509056fea2646970667358221220ead3a69be345bfc2b228f4cad3fd6d7becc01823a1ea428d009318c6734a703864736f6c634300060c0033";

type ChainLogConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainLogConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainLog__factory extends ContractFactory {
  constructor(...args: ChainLogConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ChainLog & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ChainLog__factory {
    return super.connect(runner) as ChainLog__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainLogInterface {
    return new Interface(_abi) as ChainLogInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ChainLog {
    return new Contract(address, _abi, runner) as unknown as ChainLog;
  }
}
