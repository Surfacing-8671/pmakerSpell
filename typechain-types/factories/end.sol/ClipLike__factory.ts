/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { ClipLike, ClipLikeInterface } from "../../end.sol/ClipLike";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "sales",
    outputs: [
      {
        internalType: "uint256",
        name: "pos",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "tic",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "top",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "yank",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ClipLike__factory {
  static readonly abi = _abi;
  static createInterface(): ClipLikeInterface {
    return new Interface(_abi) as ClipLikeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ClipLike {
    return new Contract(address, _abi, runner) as unknown as ClipLike;
  }
}
