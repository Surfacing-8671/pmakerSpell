/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { CatLike, CatLikeInterface } from "../../end.sol/CatLike";

const _abi = [
  {
    inputs: [],
    name: "cage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "ilks",
    outputs: [
      {
        internalType: "address",
        name: "flip",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chop",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lump",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class CatLike__factory {
  static readonly abi = _abi;
  static createInterface(): CatLikeInterface {
    return new Interface(_abi) as CatLikeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CatLike {
    return new Contract(address, _abi, runner) as unknown as CatLike;
  }
}
